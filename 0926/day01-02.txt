📌 자바스크립트의 특징
 
- 웹의 동적 동작을 구현하기 위한 언어
- 웹 브라우저에서 실행되며, 서버 환경에서는 Node.js로 동작 가능
- HTML 문서 내에서 <script> ~ </script> 태그 안에 작성
- 대소문자를 구별함 (let과 Let은 다른 변수로 인식)
- 객체 기반의 스크립트 언어로, 다양한 객체를 활용하여 동작을 구현
- 웹 브라우저 자바스크립트 엔진이 내장되어 있어 별도의 설정 없이 사용 가능

📌 use strict (js 작성시 최상단에 작성)
 
- 자바스크립트에서 strict mode를 사용하겠다는 선언
- 엄격한 문법을 적용하여, 실수를 줄이고 코드 품질을 높이는 역할
- 예: 변수 선언 없이 사용 불가, 대소문자 명확하게 구분
- 상단에 "use strict";를 추가하여 활성화 가능
- use strict 없이도 코드를 작성할 수 있지만, 이를 사용하면 보다 안전하게 코딩 가능


=EX=
"use strict";
x = 10;  // Error: strict mode에서는 변수를 선언하지 않고 사용할 수 없음
 
*상수(constant)
한번 선언된 상수는 다시 재정의 할 수 없으며, 값 재할당도 안됨
- 상수의 작성예시
const 상수명 = 값 (ㅇ)
상수명 = 값(x) // 재할당 불가능

typeof(함수)
해당 type을 반환함 (number,string 등)

자바스크립트의 데이터 타입(형)
타입이란? 프로그램에서 다룰 수 있는 값의 종류

1. 숫자형 (number)
자바스크립트는 정수와 실수구분X,  모든수를 실수하나로표현

2. 문자형 (string)
문자열을 쌍따옴표,따옴표로 둘러싸인 문자의 집합

3.불리언형 (boolean)
참(true) 또는 거짓(false)으로 표현되는 값

const b1 = true; // 값이 있으면 true
const b2 = false; // 값이 없으면 false


4. undefined, null 형
undefined : 타입이 정해지지 않은것을 의미 -> 변수 선언 후 값이 정해지지 않음
null : 값이 정해지지 않은것을 의미 -> null로 변수를 초기화 한 경우

5. 객체형 (object)
여러 속성을 하나의 변수에 저장할 수 있도록 해주는 데이터타입
-> key / value pair 구조
let student = {"name" : "김사과", "age":20}
               -----------------   --------
                   key / value     key / value

6. 심볼형(Symbol)
유일하고 변경 불가능한 기본값을 만듬. 객체 속성의 key 값으로도 사용할수있음
^이름의 충돌 위험이 없는 고유한 값을 만들기 위해 사용^

const sym1 = Symbol("apple");
const sym2 = Symbol("apple");

consloe.log(sym1 === sym2); //false

sym1 안에 있는 apple 이고, sym2 안에 있는 apple이라서 false로 나옴



======================= DAY 2 =====================
======================= DAY 2 =====================
======================= DAY 2 =====================

[자바스크립트의 타입변환]
-자바스크립트의 변수는 타입이 고정되어 있지않음, 같은 변수에 다른 타입값을 대입가능.
let a = 10; //숫자형
a = "안녕"; //문자열형

1. 암시적 타입 변환
-타입의 값을 기대하는 곳에 다른 타입의 값이 오면 자동으로 타입을 변환해서 사용

* NaN(Not a Number)
정의되지 않은 값은 나타낼 수 없는 값을 뜻함. 예를 들어 0을 0으로 나누거나, 숫자로 변환할 수 없는 연산을 시도한 경우 반환함.

2. 명시적 타입 변환
자바스크립트는 자동으로 타입 변환을 사용하지만 종종 명시적으로 타입을 변환할 필요가 있음. 이 때 사용하는 함수는 다음과 같음.
[명시적 타입변환의 종류]
Number() : 문자를 숫자로 변환
Number("10"+"5") (x)

String() : 숫자나 불린등을 문자형으로 변환
Boolean() : 문자나 숫자등을 불린형으로 변환
object() : 모든자료형을 객체형으로 변환
ParseInt(): 문자형을 int형으로 변환
parseFloat():문자형을 float형으로 변환


[자바스크립트의  대화상자]
alert () 또는 window.alert() : 사용자에게 메시지를 보여주고, 확인을 기다림
confirm() 또는 window.confirm() : 메세지를 보여주고 확인/취소를 누르면 불리언값으로 결과보임
prompt() 또는  window.prompt() : 사용자에게 메세지를 보여주고 입력한 문자열을 리턴


[연산자(Operator)]  

1. 산술 연산자
산술 연산자는 사칙연산 및 기본적인 연산을 하는 연산자입니다.
2. 비교 연산자
비교 연산자는 피연산자 사이의 상대적인 크기를 판단하여 참 또는 거짓을 반환합니다.

3. 대입 연산자
변수나 상수에 값을 대입할 때 사용하는 연산자입니다.
=: 우측의 값을 왼쪽(변수 또는 상수)에 대입
+=, -=, *=, /=, %=, **= : 우측의 값을 왼쪽의 값과 연산 후 다시 왼쪽(변수)에 대입합니다

4. 증감 연산자
증감 연산자는 1씩 값을 증가시키거나 또는 감소시킬 때 사용하는 연산자입니다. 연산자의 위치가 어디에 있는지에 따라 결과가 달라질 수 있습니다.
++변수 : 변수의 값을 1증가시킨 후, 다음 연산을 진행
변수++: 먼저 연산을 수행한 후, 변수의 값을 1층가 시킴 
--변수 : 변수의 값을 1감소시킨 후, 다음 연산을 진행
변수--: 먼저 연산을 수행한 후, 변수의 값을 1감소 시킴


5. 논리 연산자
논리 연산자는 주어진 논리식을 판단하여 참과 거짓을 반환합니다.
and(&&) 연산
두 논리식 모두 참이면 참을 반환하는 연산자 
or(11) 연산
두 논리식 중 하나라도 참이면 참을 반환하는 연산자 
not(!) 연산자
논리식의 결과가 참이면 거짓으로, 거짓이면 참으로 변환하는 연산자

6. 비트 연산자
비트 연산자는 논리 연산자와 비슷하지만 비트 단위로 논리 연산을 수행
bit : 컴퓨터의 용량의 최소단위
byte(바이트) : 1byte는 8bit KB(킬로바이트) : 1KB는 1024byte
KB(키로바이트) : 1KB는 1024byte
MB(메가바이트) : 1MB는 1024KB
GB(기가바이트) : 1GB는 1024MB
TB(테라바이트) : 1TB는 1024GB
PB(페타바이트) : 1PB는 1024TB

컴퓨터는 2진법 , 사람은 10진법

7. 삼항 연산자
조건식에 따른 참, 거짓에 따라 반환값이 달라지는 연산자



======================= DAY 3 =====================
======================= DAY 3 =====================
======================= DAY 3 =====================
 
@@@@@@@@@@@@@@@@@@@@@@@@@@@@정리 필 - 학원미리 가서 자습실에서 정리하기
@@@@@@@@@@@@@@@@@@@@@@@@@@@@정리 필 - 학원미리 가서 자습실에서 정리하기