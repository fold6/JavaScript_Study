=== 정리필
=== 정리필
=== 정리필

[변수의 범위]
자바스크립트 에서는 객체, 함수 모두 변수(상수)임
변수의 범위란 변수가 접근할 수 있는 변수, 객체 그리고 함수의 집합을 의미함

1.지역 변수
함수 내에서 선언된 변수를 가리킴. 지역변수는 변수가 선언된 함수 내에서만 유효,
함수가 종료되면 메모리에서 사라짐


2.전역 변수
함수의 외부에서 선언된 변수를 가리킴. 전역변수는 프로그램의 어느영역에서나 접근가능, 웹페이지가 닫혀야만 메모리에서 사라짐



[객체(object)]
실생활에서 우리가 인식할 수 있는 사물들을 객체라고 함.

[프로퍼티(Property)]
자바스크립트의 기본 타입은 객체. 객체란 이름과 값으로 구성된 프로퍼티의
정렬되지 않은 집합임.
프로퍼티의 값으로 함수도 올 수 있는데, 이를 프로퍼티 메소드라고 부름

const dog = {} // 빈 객체
const dog = { 
    name: "루시", 
    age: 10,
    color: "white", 
    weight: 3.5,
    sleep: function(){
        console.log('잠을 잡니다');
        }
    ...
}

[객체/배열차이점]
1.인덱스가 있음
2.원래 타입은 공통되어야함
3.크기가 정해져있음(갯수)


[객체를 만드는 방법]
1. 리터럴 표기법 "무엇은 무엇입니다" -> 한개만 만듬
자바스크립트에서 객체를 만드는 가장 쉬운방법

const 객체명 = {
    프로퍼티명: 프로퍼티값,
    ...
    ...
}

2. 생성자를 이용한 객체생성 -> 여러개를 만듬
(1번방법보다 여러개 만들때 쉬움<틀을 만들어 놓고 돌리는거라서)

-new 연산자를 사용하여 객체를 생성하고 초기화할 수 있음.
이 때 사용되는 메소드를 생성자라고 하면, 이 메소드는 새롭게 생성되는 
객체를 초기화하는 역할을 함.

function 생성자명 (매개변수1, 매변2...){
    프로퍼티명 = 값;
    ..
    ..
}


-> 이런식으로 만들겠다는 템플릿(형식/생성자 함수)
const 객체명1 = new 생성자명(값1,값2..); // 오브젝트1
const 객체명2 = new 생성자명(값1,값2..); // 오브젝트2


3. 클래스를 이용한 객체생성 (설계도 개념)
const 클래스명 = class {
    constructor(매개변수1,매개변수2...){
        프로퍼티명 = 값;
        ...
        ...
    }
    메소드명(매개변수1, 매개변수2..){

    }
    ...
}
const 객체명 = new 클래스명 (값1,값2...);